{"ast":null,"code":"var _jsxFileName = \"/Users/artpavel/firstprog/react/Max/food-order-http-react/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n/* --- help function for validation --- */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n/* --- END help function for validation --- */\n\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFromInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  }); // for input\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value; // checked on valid\n\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    setFromInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostal\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return null;\n    } // Submit cart data\n\n\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    });\n  }; // for style invalid input\n\n\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n  const postalControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), !formInputsValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal-code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"cJxODWZFp7pQ2j5pY/HSTCs9bMY=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFromInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","cityControlClasses","postalControlClasses","form","actions","onCancel","submit"],"sources":["/Users/artpavel/firstprog/react/Max/food-order-http-react/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\n\n/* --- help function for validation --- */\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\n/* --- END help function for validation --- */\n\nconst Checkout = (props) => {\n  const [formInputsValidity, setFromInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n\n  // for input\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    // checked on valid\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n\n    setFromInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostal\n    });\n\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalIsValid;\n\n    if (!formIsValid) {\n      return null;\n    }\n\n    // Submit cart data\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      city: enteredCity,\n      postalCode: enteredPostal\n    })\n  };\n\n  // for style invalid input\n  const nameControlClasses = `${ classes.control } ${ formInputsValidity.name ? '' : classes.invalid }`;\n  const streetControlClasses = `${ classes.control } ${ formInputsValidity.street ? '' : classes.invalid }`;\n  const cityControlClasses = `${ classes.control } ${ formInputsValidity.city ? '' : classes.invalid }`;\n  const postalControlClasses = `${ classes.control } ${ formInputsValidity.postalCode ? '' : classes.invalid }`;\n\n  return (\n    <form className={ classes.form }\n          onSubmit={ confirmHandler }\n    >\n      <div className={ nameControlClasses }>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\"\n               id=\"name\"\n               ref={ nameInputRef }\n        />\n        { !formInputsValidity.name && <p>Please enter a valid name!</p> }\n      </div>\n\n      <div className={ streetControlClasses }>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\"\n               id=\"street\"\n               ref={ streetInputRef }\n        />\n        { !formInputsValidity.street && <p>Please enter a valid street!</p> }\n\n      </div>\n\n      <div className={ postalControlClasses }>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\"\n               id=\"postal\"\n               ref={ postalInputRef }\n        />\n        { !formInputsValidity.postalCode && <p>Please enter a valid postal-code!</p> }\n\n      </div>\n\n      <div className={ cityControlClasses }>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\"\n               id=\"city\"\n               ref={ cityInputRef }\n        />\n        { !formInputsValidity.city && <p>Please enter a valid city!</p> }\n\n      </div>\n\n      <div className={ classes.actions }>\n        <button type=\"button\"\n                onClick={ props.onCancel }\n        >\n          Cancel\n        </button>\n        <button className={ classes.submit }>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}